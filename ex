[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 1bc29aa..b55518b 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,16 +1,210 @@[m
[32m+[m[32m# Created by https://www.toptal.com/developers/gitignore/api/android,androidstudio,kotlin,gradle[m
[32m+[m[32m# Edit at https://www.toptal.com/developers/gitignore?templates=android,androidstudio,kotlin,gradle[m
[32m+[m
[32m+[m[32m### Android ###[m
[32m+[m[32m# Gradle files[m
[32m+[m[32m.gradle/[m
[32m+[m[32mbuild/[m
[32m+[m
[32m+[m[32m# Local configuration file (sdk path, etc)[m
[32m+[m[32mlocal.properties[m
[32m+[m
[32m+[m[32m# Log/OS Files[m
[32m+[m[32m*.log[m
[32m+[m
[32m+[m[32m# Android Studio generated files and folders[m
[32m+[m[32mcaptures/[m
[32m+[m[32m.externalNativeBuild/[m
[32m+[m[32m.cxx/[m
[32m+[m[32m*.apk[m
[32m+[m[32moutput.json[m
[32m+[m
[32m+[m[32m# IntelliJ[m
 *.iml[m
[32m+[m[32m.idea/[m
[32m+[m[32mmisc.xml[m
[32m+[m[32mdeploymentTargetDropDown.xml[m
[32m+[m[32mrender.experimental.xml[m
[32m+[m
[32m+[m[32m# Keystore files[m
[32m+[m[32m*.jks[m
[32m+[m[32m*.keystore[m
[32m+[m
[32m+[m[32m# Google Services (e.g. APIs or Firebase)[m
[32m+[m[32mgoogle-services.json[m
[32m+[m
[32m+[m[32m# Android Profiling[m
[32m+[m[32m*.hprof[m
[32m+[m
[32m+[m[32m### Android Patch ###[m
[32m+[m[32mgen-external-apklibs[m
[32m+[m
[32m+[m[32m# Replacement of .externalNativeBuild directories introduced[m
[32m+[m[32m# with Android Studio 3.5.[m
[32m+[m
[32m+[m[32m### Kotlin ###[m
[32m+[m[32m# Compiled class file[m
[32m+[m[32m*.class[m
[32m+[m
[32m+[m[32m# Log file[m
[32m+[m
[32m+[m[32m# BlueJ files[m
[32m+[m[32m*.ctxt[m
[32m+[m
[32m+[m[32m# Mobile Tools for Java (J2ME)[m
[32m+[m[32m.mtj.tmp/[m
[32m+[m
[32m+[m[32m# Package Files #[m
[32m+[m[32m*.jar[m
[32m+[m[32m*.war[m
[32m+[m[32m*.nar[m
[32m+[m[32m*.ear[m
[32m+[m[32m*.zip[m
[32m+[m[32m*.tar.gz[m
[32m+[m[32m*.rar[m
[32m+[m
[32m+[m[32m# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml[m
[32m+[m[32mhs_err_pid*[m
[32m+[m[32mreplay_pid*[m
[32m+[m
[32m+[m[32m### Gradle ###[m
 .gradle[m
[31m-/local.properties[m
[31m-/.idea/caches[m
[31m-/.idea/libraries[m
[31m-/.idea/modules.xml[m
[31m-/.idea/workspace.xml[m
[31m-/.idea/navEditor.xml[m
[31m-/.idea/assetWizardSettings.xml[m
[31m-/.idea[m
[31m-.DS_Store[m
[31m-/build[m
[31m-/captures[m
[32m+[m[32m**/build/[m
[32m+[m[32m!src/**/build/[m
[32m+[m
[32m+[m[32m# Ignore Gradle GUI config[m
[32m+[m[32mgradle-app.setting[m
[32m+[m
[32m+[m[32m# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)[m
[32m+[m[32m!gradle-wrapper.jar[m
[32m+[m
[32m+[m[32m# Avoid ignore Gradle wrappper properties[m
[32m+[m[32m!gradle-wrapper.properties[m
[32m+[m
[32m+[m[32m# Cache of project[m
[32m+[m[32m.gradletasknamecache[m
[32m+[m
[32m+[m[32m# Eclipse Gradle plugin generated files[m
[32m+[m[32m# Eclipse Core[m
[32m+[m[32m.project[m
[32m+[m[32m# JDT-specific (Eclipse Java Development Tools)[m
[32m+[m[32m.classpath[m
[32m+[m
[32m+[m[32m### Gradle Patch ###[m
[32m+[m[32m# Java heap dump[m
[32m+[m
[32m+[m[32m### AndroidStudio ###[m
[32m+[m[32m# Covers files to be ignored for android development using Android Studio.[m
[32m+[m
[32m+[m[32m# Built application files[m
[32m+[m[32m*.ap_[m
[32m+[m[32m*.aab[m
[32m+[m
[32m+[m[32m# Files for the ART/Dalvik VM[m
[32m+[m[32m*.dex[m
[32m+[m
[32m+[m[32m# Java class files[m
[32m+[m
[32m+[m[32m# Generated files[m
[32m+[m[32mbin/[m
[32m+[m[32mgen/[m
[32m+[m[32mout/[m
[32m+[m
[32m+[m[32m# Gradle files[m
[32m+[m
[32m+[m[32m# Signing files[m
[32m+[m[32m.signing/[m
[32m+[m
[32m+[m[32m# Local configuration file (sdk path, etc)[m
[32m+[m
[32m+[m[32m# Proguard folder generated by Eclipse[m
[32m+[m[32mproguard/[m
[32m+[m
[32m+[m[32m# Log Files[m
[32m+[m
[32m+[m[32m# Android Studio[m
[32m+[m[32m/*/build/[m
[32m+[m[32m/*/local.properties[m
[32m+[m[32m/*/out[m
[32m+[m[32m/*/*/build[m
[32m+[m[32m/*/*/production[m
[32m+[m[32m.navigation/[m
[32m+[m[32m*.ipr[m
[32m+[m[32m*~[m
[32m+[m[32m*.swp[m
[32m+[m
[32m+[m[32m# Keystore files[m
[32m+[m
[32m+[m[32m# Google Services (e.g. APIs or Firebase)[m
[32m+[m[32m# google-services.json[m
[32m+[m
[32m+[m[32m# Android Patch[m
[32m+[m
[32m+[m[32m# External native build folder generated in Android Studio 2.2 and later[m
 .externalNativeBuild[m
[31m-.cxx[m
[31m-local.properties[m
[32m+[m
[32m+[m[32m# NDK[m
[32m+[m[32mobj/[m
[32m+[m
[32m+[m[32m# IntelliJ IDEA[m
[32m+[m[32m*.iws[m
[32m+[m[32m/out/[m
[32m+[m
[32m+[m[32m# User-specific configurations[m
[32m+[m[32m.idea/caches/[m
[32m+[m[32m.idea/libraries/[m
[32m+[m[32m.idea/shelf/[m
[32m+[m[32m.idea/workspace.xml[m
[32m+[m[32m.idea/tasks.xml[m
[32m+[m[32m.idea/.name[m
[32m+[m[32m.idea/compiler.xml[m
[32m+[m[32m.idea/copyright/profiles_settings.xml[m
[32m+[m[32m.idea/encodings.xml[m
[32m+[m[32m.idea/misc.xml[m
[32m+[m[32m.idea/modules.xml[m
[32m+[m[32m.idea/scopes/scope_settings.xml[m
[32m+[m[32m.idea/dictionaries[m
[32m+[m[32m.idea/vcs.xml[m
[32m+[m[32m.idea/jsLibraryMappings.xml[m
[32m+[m[32m.idea/datasources.xml[m
[32m+[m[32m.idea/dataSources.ids[m
[32m+[m[32m.idea/sqlDataSources.xml[m
[32m+[m[32m.idea/dynamic.xml[m
[32m+[m[32m.idea/uiDesigner.xml[m
[32m+[m[32m.idea/assetWizardSettings.xml[m
[32m+[m[32m.idea/gradle.xml[m
[32m+[m[32m.idea/jarRepositories.xml[m
[32m+[m[32m.idea/navEditor.xml[m
[32m+[m
[32m+[m[32m# Legacy Eclipse project files[m
[32m+[m[32m.cproject[m
[32m+[m[32m.settings/[m
[32m+[m
[32m+[m[32m# Mobile Tools for Java (J2ME)[m
[32m+[m
[32m+[m[32m# Package Files #[m
[32m+[m
[32m+[m[32m# virtual machine crash logs (Reference: http://www.java.com/en/download/help/error_hotspot.xml)[m
[32m+[m
[32m+[m[32m## Plugin-specific files:[m
[32m+[m
[32m+[m[32m# mpeltonen/sbt-idea plugin[m
[32m+[m[32m.idea_modules/[m
[32m+[m
[32m+[m[32m# JIRA plugin[m
[32m+[m[32matlassian-ide-plugin.xml[m
[32m+[m
[32m+[m[32m# Mongo Explorer plugin[m
[32m+[m[32m.idea/mongoSettings.xml[m
[32m+[m
[32m+[m[32m# Crashlytics plugin (for Android Studio and IntelliJ)[m
[32m+[m[32mcom_crashlytics_export_strings.xml[m
[32m+[m[32mcrashlytics.properties[m
[32m+[m[32mcrashlytics-build.properties[m
[32m+[m[32mfabric.properties[m
[32m+[m
[32m+[m[32m### AndroidStudio Patch ###[m
[32m+[m
[32m+[m[32m!/gradle/wrapper/gradle-wrapper.jar[m
[32m+[m
[32m+[m[32m# End of https://www.toptal.com/developers/gitignore/api/android,androidstudio,kotlin,gradle[m
\ No newline at end of file[m
[1mdiff --git a/.idea/compiler.xml b/.idea/compiler.xml[m
[1mindex fb7f4a8..b589d56 100644[m
[1m--- a/.idea/compiler.xml[m
[1m+++ b/.idea/compiler.xml[m
[36m@@ -1,6 +1,6 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
 <project version="4">[m
   <component name="CompilerConfiguration">[m
[31m-    <bytecodeTargetLevel target="11" />[m
[32m+[m[32m    <bytecodeTargetLevel target="17" />[m
   </component>[m
 </project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mindex 74db72d..ace883a 100644[m
[1m--- a/.idea/misc.xml[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -1,4 +1,3 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
 <project version="4">[m
   <component name="DesignSurface">[m
     <option name="filePathToZoomLevelMap">[m
[36m@@ -18,7 +17,7 @@[m
       </map>[m
     </option>[m
   </component>[m
[31m-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">[m
[32m+[m[32m  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">[m
     <output url="file://$PROJECT_DIR$/build/classes" />[m
   </component>[m
   <component name="ProjectType">[m
[1mdiff --git a/app/build.gradle b/app/build.gradle[m
[1mindex 363e295..4e0aecb 100644[m
[1m--- a/app/build.gradle[m
[1m+++ b/app/build.gradle[m
[36m@@ -48,9 +48,17 @@[m [mapply plugin: 'com.android.application'[m
 [m
 dependencies {[m
 [m
[32m+[m[32m    // QR code generator[m
[32m+[m[32m    implementation 'io.github.g0dkar:qrcode-kotlin-android:3.3.0'[m
[32m+[m
[32m+[m[32m    // Other dependencies[m
     implementation 'androidx.core:core-ktx:1.7.0'[m
     implementation 'androidx.appcompat:appcompat:1.6.1'[m
[32m+[m
[32m+[m[32m    // Fragments[m
     implementation 'androidx.fragment:fragment-ktx:1.5.7'[m
[32m+[m
[32m+[m
     implementation 'com.google.android.material:material:1.9.0'[m
     implementation 'androidx.constraintlayout:constraintlayout:2.1.4'[m
     implementation platform('com.google.firebase:firebase-bom:32.0.0')[m
[36m@@ -63,6 +71,10 @@[m [mdependencies {[m
     implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'[m
     implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'[m
     implementation 'com.google.android.gms:play-services-maps:18.1.0'[m
[32m+[m[32m    implementation 'androidx.annotation:annotation:1.6.0'[m
[32m+[m[32m    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'[m
[32m+[m[32m    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'[m
[32m+[m[32m    implementation 'com.google.android.gms:play-services-location:21.0.1'[m
     annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'[m
     testImplementation 'junit:junit:4.13.2'[m
     androidTestImplementation 'androidx.test.ext:junit:1.1.5'[m
[1mdiff --git a/app/src/main/java/com/seoultech/mobileprogramming/high_five/LoginActivity.kt b/app/src/main/java/com/seoultech/mobileprogramming/high_five/LoginActivity.kt[m
[1mindex 9fa49ba..632565e 100644[m
[1m--- a/app/src/main/java/com/seoultech/mobileprogramming/high_five/LoginActivity.kt[m
[1m+++ b/app/src/main/java/com/seoultech/mobileprogramming/high_five/LoginActivity.kt[m
[36m@@ -114,5 +114,6 @@[m [mclass LoginActivity : AppCompatActivity(), GoogleApiClient.OnConnectionFailedLis[m
         }[m
     }[m
 [m
[32m+[m
 }[m
 [m
[1mdiff --git a/app/src/main/java/com/seoultech/mobileprogramming/high_five/MainActivity.kt b/app/src/main/java/com/seoultech/mobileprogramming/high_five/MainActivity.kt[m
[1mindex c62d11e..b08d439 100644[m
[1m--- a/app/src/main/java/com/seoultech/mobileprogramming/high_five/MainActivity.kt[m
[1m+++ b/app/src/main/java/com/seoultech/mobileprogramming/high_five/MainActivity.kt[m
[36m@@ -1,14 +1,14 @@[m
 package com.seoultech.mobileprogramming.high_five[m
 [m
[31m-import android.content.Intent[m
 import androidx.appcompat.app.AppCompatActivity[m
 import android.os.Bundle[m
 import android.util.Log[m
 import androidx.fragment.app.Fragment[m
 import androidx.fragment.app.commit[m
 import com.bumptech.glide.Glide[m
[31m-import com.seoultech.mobileprogramming.high_five.databinding.ActivityLoginBinding[m
[32m+[m[32mimport com.google.android.gms.location.FusedLocationProviderClient[m
 import com.seoultech.mobileprogramming.high_five.databinding.ActivityMainBinding[m
[32m+[m[32mimport com.seoultech.mobileprogramming.high_five.fragments.QrFragment[m
 import com.seoultech.mobileprogramming.high_five.fragments.HomeFragment[m
 import com.seoultech.mobileprogramming.high_five.fragments.MapsFragment[m
 import com.seoultech.mobileprogramming.high_five.fragments.PostFragment[m
[36m@@ -16,18 +16,22 @@[m [mimport com.seoultech.mobileprogramming.high_five.fragments.UserProfileFragment[m
 [m
 class MainActivity : AppCompatActivity() {[m
 [m
[31m-    val binding by lazy {ActivityMainBinding.inflate(layoutInflater)}[m
[32m+[m[32m    // See: https://developer.android.com/training/basics/intents/result[m
[32m+[m[32m    val binding by lazy { ActivityMainBinding.inflate(layoutInflater) }[m
[32m+[m
[32m+[m[32m    private lateinit var fusedLocationProviderClient: FusedLocationProviderClient[m
 [m
     override fun onCreate(savedInstanceState: Bundle?) {[m
         super.onCreate(savedInstanceState)[m
         setContentView(binding.root)[m
[31m-        Log.d("highfive", "mainactivity created")[m
[32m+[m[32m        Log.d("highfive", "MainActivity created")[m
         val userName = getUserInfo()[m
 [m
         var homeFragment = HomeFragment()[m
         var postFragment = PostFragment()[m
         var mapsFragment = MapsFragment()[m
         var userProfileFragment = UserProfileFragment()[m
[32m+[m[32m        var qrFragment = QrFragment()[m
 [m
         val fragmentManager = supportFragmentManager[m
         fragmentManager.commit {[m
[36m@@ -36,11 +40,41 @@[m [mclass MainActivity : AppCompatActivity() {[m
 [m
         binding.navigationView.setOnItemSelectedListener {[m
             Log.d("highfive", "${it.itemId}")[m
[31m-            when(it.itemId) {[m
[31m-                R.id.homeFragment -> fragmentManager.commit { replace(binding.fragmentContainerView.id, homeFragment) }[m
[31m-                R.id.postFragment -> fragmentManager.commit { replace(binding.fragmentContainerView.id, postFragment) }[m
[31m-                R.id.mapFragment -> fragmentManager.commit { replace(binding.fragmentContainerView.id, mapsFragment) }[m
[31m-                R.id.userPageFragment -> fragmentManager.commit { replace(binding.fragmentContainerView.id, userProfileFragment) }[m
[32m+[m[32m            when (it.itemId) {[m
[32m+[m[32m                R.id.homeFragment -> fragmentManager.commit {[m
[32m+[m[32m                    replace([m
[32m+[m[32m                        binding.fragmentContainerView.id,[m
[32m+[m[32m                        homeFragment[m
[32m+[m[32m                    )[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                R.id.qrFragment -> fragmentManager.commit {[m
[32m+[m[32m                    replace([m
[32m+[m[32m                        binding.fragmentContainerView.id,[m
[32m+[m[32m                        qrFragment[m
[32m+[m[32m                    )[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                R.id.mapFragment -> fragmentManager.commit {[m
[32m+[m[32m                    replace([m
[32m+[m[32m                        binding.fragmentContainerView.id,[m
[32m+[m[32m                        mapsFragment[m
[32m+[m[32m                    )[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                R.id.userPageFragment -> fragmentManager.commit {[m
[32m+[m[32m                    replace([m
[32m+[m[32m                        binding.fragmentContainerView.id,[m
[32m+[m[32m                        userProfileFragment[m
[32m+[m[32m                    )[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                R.id.postFragment -> fragmentManager.commit {[m
[32m+[m[32m                    replace([m
[32m+[m[32m                        binding.fragmentContainerView.id,[m
[32m+[m[32m                        postFragment[m
[32m+[m[32m                    )[m
[32m+[m[32m                }[m
             }[m
             true[m
         }[m
[36m@@ -59,6 +93,18 @@[m [mclass MainActivity : AppCompatActivity() {[m
         return name[m
     }[m
 [m
[32m+[m[32m    fun getUserInfoForQR(): String? {[m
[32m+[m[32m        val intent = intent[m
[32m+[m[32m        Log.d("highfive", intent.toString())[m
[32m+[m
[32m+[m[32m        val name: String? = intent.getStringExtra("name")[m
[32m+[m
[32m+[m[32m        binding.tvName.text = name[m
[32m+[m
[32m+[m[32m        return name[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Set fragment manager for transaction[m
     fun setFragment(tag: String, fragment: Fragment) {[m
         val fragmentManager = supportFragmentManager[m
         val fragmentTransaction = fragmentManager.beginTransaction()[m
[36m@@ -67,27 +113,57 @@[m [mclass MainActivity : AppCompatActivity() {[m
             fragmentTransaction.add(binding.fragmentContainerView.id, fragment)[m
         }[m
 [m
[32m+[m[32m        // Declare fragments on navigation bar[m
         val homeFragment = fragmentManager.findFragmentByTag("home_fragment")[m
         val postFragment = fragmentManager.findFragmentByTag("post_fragment")[m
         val mapsFragment = fragmentManager.findFragmentByTag("maps_fragment")[m
         val userProfileFragment = fragmentManager.findFragmentByTag("userProfile_fragment")[m
[32m+[m[32m        val qrFragment = fragmentManager.findFragmentByTag("qr_fragment")[m
 [m
[31m-        if (homeFragment != null) {fragmentTransaction.hide(homeFragment)}[m
[31m-        if (postFragment != null) {fragmentTransaction.hide(postFragment)}[m
[31m-        if (mapsFragment != null) {fragmentTransaction.hide(mapsFragment)}[m
[31m-        if (userProfileFragment != null) {fragmentTransaction.hide(userProfileFragment)}[m
[31m-[m
[31m-        if (tag == "HomeFragment") {[m
[31m-            if (homeFragment != null) { fragmentTransaction.show(homeFragment) }[m
[32m+[m[32m        // Hide fragment[m
[32m+[m[32m        // Home Fragment[m
[32m+[m[32m        if (homeFragment != null) {[m
[32m+[m[32m            fragmentTransaction.hide(homeFragment)[m
[32m+[m[32m        }[m
[32m+[m[32m        // Post Fragment[m
[32m+[m[32m        if (postFragment != null) {[m
[32m+[m[32m            fragmentTransaction.hide(postFragment)[m
[32m+[m[32m        }[m
[32m+[m[32m        // Maps Fragment[m
[32m+[m[32m        if (mapsFragment != null) {[m
[32m+[m[32m            fragmentTransaction.hide(mapsFragment)[m
         }[m
[31m-        else if (tag == "PostFragment") {[m
[31m-            if (postFragment != null) { fragmentTransaction.show(postFragment) }[m
[32m+[m[32m        // User Profile Fragment[m
[32m+[m[32m        if (userProfileFragment != null) {[m
[32m+[m[32m            fragmentTransaction.hide(userProfileFragment)[m
         }[m
[31m-        else if (tag == "MapFragment") {[m
[31m-            if (mapsFragment != null) { fragmentTransaction.show(mapsFragment) }[m
[32m+[m[32m        // QR Fragment[m
[32m+[m[32m        if (qrFragment != null) {[m
[32m+[m[32m            fragmentTransaction.hide(qrFragment)[m
         }[m
[31m-        else if (tag == "UserProfileFragment") {[m
[31m-            if (userProfileFragment != null) { fragmentTransaction.show(userProfileFragment) }[m
[32m+[m
[32m+[m[32m        // Show fragment[m
[32m+[m[32m        // When touch the item in Bottom Navigation View, it shows the fragment[m
[32m+[m[32m        if (tag == "HomeFragment") {[m
[32m+[m[32m            if (homeFragment != null) {[m
[32m+[m[32m                fragmentTransaction.show(homeFragment)[m
[32m+[m[32m            }[m
[32m+[m[32m        } else if (tag == "PostFragment") {[m
[32m+[m[32m            if (postFragment != null) {[m
[32m+[m[32m                fragmentTransaction.show(postFragment)[m
[32m+[m[32m            }[m
[32m+[m[32m        } else if (tag == "MapFragment") {[m
[32m+[m[32m            if (mapsFragment != null) {[m
[32m+[m[32m                fragmentTransaction.show(mapsFragment)[m
[32m+[m[32m            }[m
[32m+[m[32m        } else if (tag == "UserProfileFragment") {[m
[32m+[m[32m            if (userProfileFragment != null) {[m
[32m+[m[32m                fragmentTransaction.show(userProfileFragment)[m
[32m+[m[32m            }[m
[32m+[m[32m        } else if (tag == "QrFragment") {[m
[32m+[m[32m            if (qrFragment != null) {[m
[32m+[m[32m                fragmentTransaction.show(qrFragment)[m
[32m+[m[32m            }[m
         }[m
         fragmentTransaction.commit()[m
     }[m
[1mdiff --git a/app/src/main/java/com/seoultech/mobileprogramming/high_five/fragments/QrFra